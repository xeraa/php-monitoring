- hosts: frontend
  remote_user: ubuntu
  become: true
  gather_facts: yes


  vars_files:
    - variables.yml


  post_tasks:
    - include_tasks: ansible_event.yml
      vars:
        application: deploy_frontend


  tasks:

    # Check that we can reach services on the backend instance
    - name: Check all port numbers are accessible from current host
      wait_for:
        host: "backend.{{ domain }}"
        port: "{{ item }}"
        state: started
        delay: 0
        timeout: 3
      with_items:
        - 3306
        - 8200

    # SilverStripe
    - name: Check if SilverStripe is installed
      stat: path="{{ silverstripe_directory }}"
      register: silverstripe_dir

    - name: Create SilverStripe and install it with all dependencies
      composer:
        command: create-project
        arguments: silverstripe/installer ./silverstripe 4.1.1
        working_dir: /var/www/html
        prefer_dist: yes
      when: not silverstripe_dir.stat.exists

    #- name: Add a community elastic-apm-php-agent to the composer file
    #  lineinfile:
    #    path: "{{ silverstripe_directory }}composer.json"
    #    regexp: 'techdeco/elastic-apm-agent'
    #    insertafter: silverstripe/recipe-cms
    #    line: '        "techdeco/elastic-apm-agent": "0.4.0",'
    #    state: present

    #- name: Install the agent with composer
    #  composer:
    #    command: update
    #    working_dir: "{{ silverstripe_directory }}"

    - name: Make sure the logs folder exists
      file:
        path: "{{ silverstripe_directory }}/logs"
        state: directory

    - name: Fix the permissions for SilverStripe
      file:
        path: "{{ silverstripe_directory }}"
        owner: www-data
        group: www-data
        mode: 0755
        state: directory
        recurse: yes

    - name: Set up SilverStripe
      template:
        src: templates/env
        dest: "{{ silverstripe_directory }}.env"
        owner: www-data
        group: www-data
        mode: 0755

    - name: Deploy some custom code
      copy:
        src: files/mysite/
        dest: "{{ silverstripe_directory }}mysite/"
        owner: www-data
        group: www-data
        mode: 0755

    - name: Configure my site through a template
      template:
        src: templates/mysite.yml
        dest: "{{ silverstripe_directory }}mysite/_config/mysite.yml"
        owner: www-data
        group: www-data
        mode: 0755

    - name: Call flush on the page to finish the installation and apply any changes
      uri: url=https://{{ domain }}?flush=all
